<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- Local DataSource that works in any environment -->

	<bean id="parentDataSource" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<!-- 数据库驱动 -->
		<property name="driverClass" value="${aliLibrary.db.driverClass}" />
		<!-- 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 -->
		<property name="idleConnectionTestPeriod" value="${aliLibrary.db.idleConnectionTestPeriod}" />
		<!-- 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 -->
		<property name="idleMaxAge" value="${aliLibrary.db.idleMaxAge}" />
		<!-- 每个分区最大的连接数 -->
		<property name="maxConnectionsPerPartition" value="${aliLibrary.db.maxConnectionsPerPartition}" />
		<!-- 每个分区最小的连接数 -->
		<property name="minConnectionsPerPartition" value="${aliLibrary.db.minConnectionsPerPartition}" />
		<!-- 分区数 ，默认值2，最小1，推荐3-4，视应用而定 -->
		<property name="partitionCount" value="${aliLibrary.db.partitionCount}" />
		<!-- 每次去拿数据库连接的时候一次性要拿几个,默认值：2 -->
		<property name="acquireIncrement" value="${aliLibrary.db.acquireIncrement}" />
		<!-- 缓存prepared statements的大小，默认值：0 -->
		<property name="statementsCacheSize" value="${aliLibrary.db.statementsCacheSize}" />
		<!-- 每个分区释放链接助理进程的数量，默认值：3，除非你的一个数据库连接的时间内做了很多工作，不然过多的助理进程会影响你的性能 -->
		<property name="releaseHelperThreads" value="${aliLibrary.db.releaseHelperThreads}" />
	</bean>
	
	<!-- 主数据源-->  
	<bean id="masterDataSource" parent="parentDataSource">
		<property name="jdbcUrl" value="${master.jdbc.url}" />
		<property name="username" value="${master.jdbc.username}" />
		<property name="password" value="${master.jdbc.password}" />
	</bean>
	<!-- 从数据源-->  
	<bean id="slaveDataSource" parent="parentDataSource">
		<property name="jdbcUrl" value="${slave.jdbc.url}" />
		<property name="username" value="${slave.jdbc.username}" />
		<property name="password" value="${slave.jdbc.password}" />
	</bean>
	
	<!-- 获取数据源 -->
	    <bean id="dataSource" class="com.multipless.egogoal.btoc.aop.DataSourceSwitch.DynamicDataSource">  
        <property name="targetDataSources">  
            <map key-type="java.lang.String">  
                <entry key="slave" value-ref="slaveDataSource" />  
            </map>  
        </property>  
        <property name="defaultTargetDataSource" ref="masterDataSource" />  
    </bean>  
    
	<!-- 切换数据源 -->
	<bean id="dataSourceAdvice" class="com.multipless.egogoal.btoc.aop.DataSourceSwitch.DataSourceAdvice">
		<property name="methodPrefix">
			<list>
				<value>add</value>
				<value>insert</value>
				<value>change</value>
				<value>validate</value>
				<value>cancel</value>
				<value>order</value>
				<value>create</value>
				<value>save</value>
				<value>edit</value>
				<value>update</value>
				<value>delete</value>
				<value>remove</value>
				<value>invoke</value>
			</list>
		</property>
	</bean>
	<aop:config>
		<aop:advisor pointcut="execution(* com.multipless.egogoal.btoc.service.impl.*.*(..))" advice-ref="dataSourceAdvice"/>
	</aop:config>


	<!--配置事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="aop*" propagation="REQUIRES_NEW" />
		</tx:attributes>
	</tx:advice>

	<!--那些类的哪些方法参与事务 -->
	<aop:config>
		<aop:pointcut id="serviceMethods" expression="execution(* com.multipless.egogoal.btoc.service.impl.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
	</aop:config>
	
	<!-- datasource transactionManager -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dataSource" />

	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

</beans>